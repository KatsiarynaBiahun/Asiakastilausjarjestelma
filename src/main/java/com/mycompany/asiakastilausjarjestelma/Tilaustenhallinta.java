/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.asiakastilausjarjestelma;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author 94630
 */
public class Tilaustenhallinta extends javax.swing.JFrame {

    /**
     * Creates new form Tilaustenhallinta
     */
    public Tilaustenhallinta() {
        initComponents();
        NaytaTilaukset();
    }

    class Tilaus {

        private int tilausnumero;
        private int asiakasnumero;
        private Date tilauspäivä;
        private Date toimituspäivä;
        private Date eräpäivä;
        private int maksutapa;
        private String lisätietoja;

        public Tilaus(int tilausnumero, int asiakasnumero, Date tilauspaiva,
                Date toimituspaiva, Date erapaiva, int maksutapa, String lisatietoja) {
            this.tilausnumero = tilausnumero;
            this.asiakasnumero = asiakasnumero;
            this.tilauspäivä = tilauspaiva;
            this.toimituspäivä = toimituspaiva;
            this.eräpäivä = erapaiva;
            this.maksutapa = maksutapa;
            this.lisätietoja = lisatietoja;
        }

        public int HaeTilausnumero() {
            return this.tilausnumero;
        }

        public int HaeAsiakasnumero() {
            return this.asiakasnumero;
        }

        public Date HaeTilauspäivä() {
            return this.tilauspäivä;
        }

        public Date HaeToimituspäivä() {
            return this.toimituspäivä;
        }

        public Date HaeEräpäivä() {
            return this.eräpäivä;
        }

        public int HaeMaksutapa() {
            return this.maksutapa;
        }

        public String HaeLisätietoja() {
            return this.lisätietoja;
        }
    }

    /*    
    class Tilausrivi{
        
        private int tuotenumero;
        private int maara;
        private double ahinta;
        
        public Tilausrivi(int tuotenumero, int maara, double ahinta){
            this.tuotenumero = tuotenumero;
            this.maara = maara;
            this.ahinta = ahinta;
        }
    }
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtblTilaus = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblTilausrivi = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtxtTilausnumero = new javax.swing.JTextField();
        jtxtAsiakasnumero = new javax.swing.JTextField();
        jtxtTilauspäivä = new javax.swing.JTextField();
        jtxtToimituspäivä = new javax.swing.JTextField();
        jtxtEräpäivä = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtxtMaksutapa = new javax.swing.JTextField();
        jtxtLisätietoja = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jbtnLisääTuote = new javax.swing.JButton();
        jbtnPoistaTuote = new javax.swing.JButton();
        jbtnTestaaTilaus = new javax.swing.JButton();
        jbtnTestaaTilausrivi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jtblTilaus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblTilaus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblTilausMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtblTilaus);

        jtblTilausrivi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane2.setViewportView(jtblTilausrivi);

        jLabel2.setText("Tilausrekisteri");

        jLabel3.setText("Tilausnumero:");

        jLabel4.setText("Asiakasnumero:");

        jLabel5.setText("Tilauspäivä:");

        jLabel6.setText("Toimituspäivä:");

        jLabel7.setText("Eräpäivä:");

        jLabel8.setText("Maksutapa:");

        jLabel9.setText("Lisätietoja:");

        jbtnLisääTuote.setText("Lisää tuote");
        jbtnLisääTuote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLisääTuoteActionPerformed(evt);
            }
        });

        jbtnPoistaTuote.setText("Poista tuote");
        jbtnPoistaTuote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPoistaTuoteActionPerformed(evt);
            }
        });

        jbtnTestaaTilaus.setText("Testaa");
        jbtnTestaaTilaus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTestaaTilausActionPerformed(evt);
            }
        });

        jbtnTestaaTilausrivi.setText("Testaa");
        jbtnTestaaTilausrivi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTestaaTilausriviActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtTilausnumero, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtTilauspäivä, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(jtxtToimituspäivä)
                            .addComponent(jtxtEräpäivä)
                            .addComponent(jtxtAsiakasnumero, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtMaksutapa)
                            .addComponent(jtxtLisätietoja))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbtnTestaaTilaus)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtnTestaaTilausrivi))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jbtnPoistaTuote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtnLisääTuote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jtxtTilausnumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jtxtAsiakasnumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jtxtTilauspäivä, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jtxtToimituspäivä, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jtxtEräpäivä, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jtxtMaksutapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(jtxtLisätietoja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel13))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jbtnLisääTuote)
                                        .addGap(38, 38, 38))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jbtnPoistaTuote)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtnTestaaTilausrivi)
                            .addComponent(jbtnTestaaTilaus))))
                .addGap(0, 42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void NaytaTilaukset() {
        ArrayList<Tilaus> list = HaeTilausTaulukko();
        DefaultTableModel model = (DefaultTableModel) jtblTilaus.getModel();

        model.setColumnIdentifiers(new Object[]{"Tilausnumero", "Asiakasnumero", "Tilauspaiva",
            "Toimituspaiva", "Erapaiva", "Maksutapa", "Lisatietoja"});
        Object[] row = new Object[7];

        for (int i = jtblTilaus.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).HaeTilausnumero();
            row[1] = list.get(i).HaeAsiakasnumero();
            row[2] = list.get(i).HaeTilauspäivä();
            row[3] = list.get(i).HaeToimituspäivä();
            row[4] = list.get(i).HaeEräpäivä();
            row[5] = list.get(i).HaeMaksutapa();
            row[6] = list.get(i).HaeLisätietoja();

            model.addRow(row);
        }
    }

    public ArrayList<Tilaus> HaeTilausTaulukko() {
        ArrayList<Tilaus> Tilaustaulukko = new ArrayList<Tilaus>();

        Connection yhteys = luoYhteys();

        String query = "Select tilausnumero, asiakasnumero, tilauspaiva, toimituspaiva, erapaiva, maksutapa, lisatietoja FROM TILAUS";
        Statement st;
        ResultSet rs;

        try {
            st = yhteys.createStatement();
            rs = st.executeQuery(query);

            Tilaus a;

            while (rs.next()) {
                a = new Tilaus(rs.getInt("Tilausnumero"), rs.getInt("Asiakasnumero"),
                        rs.getDate("Tilauspaiva"), rs.getDate("Toimituspaiva"),
                        rs.getDate("Erapaiva"), rs.getInt("Maksutapa"), rs.getString("Lisatietoja"));
                Tilaustaulukko.add(a);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return Tilaustaulukko;
    }

    public Connection luoYhteys() {
        Connection cn = null;

        try {
            cn = DriverManager.getConnection("jdbc:mariadb://" + "ec2-13-49-231-56.eu-north-1.compute.amazonaws.com" + ":3306/ASIAKASTILAUS", "kehittaja", "Koira123!");
            return cn;
        } catch (SQLException e) {
            System.out.println("Yhteyden luominen epäonnistui!:\n" + e.getMessage());
            e.printStackTrace();
            return null;
        }
    }

    private void jtblTilausMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblTilausMouseClicked
        int i = jtblTilaus.getSelectedRow();
        TableModel model = jtblTilaus.getModel();
        jtxtTilausnumero.setText(model.getValueAt(i, 0).toString());
        jtxtAsiakasnumero.setText(model.getValueAt(i, 1).toString());
        jtxtTilauspäivä.setText(model.getValueAt(i, 2).toString());
        jtxtToimituspäivä.setText(model.getValueAt(i, 3).toString());
        jtxtEräpäivä.setText(model.getValueAt(i, 4).toString());
        jtxtMaksutapa.setText(model.getValueAt(i, 5).toString());
        jtxtLisätietoja.setText(model.getValueAt(i, 6).toString());

        NaytaTilausRivi();
    }//GEN-LAST:event_jtblTilausMouseClicked

    public void NaytaTilausRivi() {
        ArrayList<List> list2 = HaeTilausRiviTaulukko();
        DefaultTableModel model2 = (DefaultTableModel) jtblTilausrivi.getModel();

        model2.setColumnIdentifiers(new Object[]{"Tuotenimi", "Maara", "Ahinta", "TilausriviNumero"});
        Object[] row = new Object[4];

        for (int i = jtblTilausrivi.getRowCount() - 1; i >= 0; i--) {
            model2.removeRow(i);
        }

        for (int i = 0; i < list2.size(); i++) {
            row[0] = list2.get(i).HaeTuotenimi();   //Tuote
            row[1] = list2.get(i).HaeTilausRiviMaara(); //TilausRivi
            row[2] = list2.get(i).HaeTilausRiviAhinta();  //TilausRivi
            row[3] = list2.get(i).HaeTilausriviNumero();
            model2.addRow(row);
        }

        //piilota Column
        jtblTilausrivi.removeColumn(jtblTilausrivi.getColumnModel().getColumn(3));
    }

    public ArrayList<List> HaeTilausRiviTaulukko() {
        ArrayList<List> TilausRivitaulukko = new ArrayList<List>();

        Connection yhteys = luoYhteys();

        String query = "Select `TUOTE`.`TUOTENIMI`, `TILAUSRIVI`.`MAARA`, `TILAUSRIVI`.`AHINTA`, `TILAUSRIVI`.`TILAUSRIVINUMERO` FROM TILAUSRIVI "
                + "INNER JOIN TUOTE ON `TUOTE`.`TUOTENUMERO`=`TILAUSRIVI`.`TUOTENUMERO` AND TILAUSNUMERO =" + jtxtTilausnumero.getText();
        Statement st;
        ResultSet rs;

        try {
            st = yhteys.createStatement();
            rs = st.executeQuery(query);

            List a;

            while (rs.next()) {
                a = new List(rs.getString("Tuotenimi"), rs.getInt("Maara"),
                        rs.getDouble("Ahinta"), rs.getInt("Tilausrivinumero"));    /////////////////////////
                TilausRivitaulukko.add(a);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return TilausRivitaulukko;
    }

    private void jbtnTestaaTilausActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTestaaTilausActionPerformed
        try {
            Class.forName("org.mariadb.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            System.out.println("Missä on MariaDB JDBC ajuri? Oletko ladannut mariadb connectorin osoitteesta: https://mariadb.com/downloads/#connectors ja lisännyt sen Netbeansissä Asiakasrekisteri-Libraries-Add JAR/Folder kohdassa? ");
            e.printStackTrace();
            return;
        }

        System.out.println("Mariadb JDBC Driver rekisteröity!");
        Connection connection = null;

        try {
            connection = DriverManager.getConnection("jdbc:mariadb://" + "ec2-13-49-231-56.eu-north-1.compute.amazonaws.com" + ":3306/ASIAKASTILAUS", "kehittaja", "Koira123!");
        } catch (SQLException e) {
            System.out.println("Yhteyden luominen epäonnistui!:\n" + e.getMessage());
        }

        if (connection != null) {
            System.out.println("Hienoa ja onnittelut! Sait luotua yhteyden tietokantaasi. Voit aloittaa käyttöliittymän koodaamisen!");
        } else {
            System.out.println("Pahus, tarkista vielä, että kaikki tarvittava on tehty ja virheitä ei ole!");
        }
    }//GEN-LAST:event_jbtnTestaaTilausActionPerformed

    private void jbtnTestaaTilausriviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTestaaTilausriviActionPerformed
        try {
            Class.forName("org.mariadb.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            System.out.println("Missä on MariaDB JDBC ajuri? Oletko ladannut mariadb connectorin osoitteesta: https://mariadb.com/downloads/#connectors ja lisännyt sen Netbeansissä Asiakasrekisteri-Libraries-Add JAR/Folder kohdassa? ");
            e.printStackTrace();
            return;
        }

        System.out.println("Mariadb JDBC Driver rekisteröity!");
        Connection connection = null;

        try {
            connection = DriverManager.getConnection("jdbc:mariadb://" + "ec2-13-49-231-56.eu-north-1.compute.amazonaws.com" + ":3306/ASIAKASTILAUS", "kehittaja", "Koira123!");
        } catch (SQLException e) {
            System.out.println("Yhteyden luominen epäonnistui!:\n" + e.getMessage());
        }

        if (connection != null) {
            System.out.println("Hienoa ja onnittelut! Sait luotua yhteyden tietokantaasi. Voit aloittaa käyttöliittymän koodaamisen!");
        } else {
            System.out.println("Pahus, tarkista vielä, että kaikki tarvittava on tehty ja virheitä ei ole!");
        }
    }//GEN-LAST:event_jbtnTestaaTilausriviActionPerformed

    private void jbtnLisääTuoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLisääTuoteActionPerformed
        Tuoterekisterihallinta sk = new Tuoterekisterihallinta(this);
        sk.setVisible(true);
    }//GEN-LAST:event_jbtnLisääTuoteActionPerformed

    private void jbtnPoistaTuoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPoistaTuoteActionPerformed
        int tulos = JOptionPane.showConfirmDialog(null, "Haluaanko suorittaa tuotteen poisto?", "Varmistuskysymys", JOptionPane.YES_NO_OPTION);

        if (tulos == JOptionPane.YES_OPTION) {
            int i = jtblTilausrivi.getSelectedRow();
            TableModel model = jtblTilausrivi.getModel();

            int tilausrivinumero = Integer.valueOf(model.getValueAt(i, 3).toString());
            
            String query = "DELETE FROM TILAUSRIVI WHERE TILAUSRIVINUMERO=" + tilausrivinumero;
            suoritaSQLKysely(query, "Poistettu");
        }
    }//GEN-LAST:event_jbtnPoistaTuoteActionPerformed

    public void LisaaTuote(int tuotenumero, int maara, double ahinta) {
        String query = "INSERT INTO `TILAUSRIVI`(`TILAUSNUMERO`, `TUOTENUMERO`, `MAARA`, `AHINTA`)";
        query = query + " VALUES('" + jtxtTilausnumero.getText() + "','" + tuotenumero + "','"
                + maara + "', '" + ahinta + "')";
        suoritaSQLKysely(query, "lisätty");
    }

    public void suoritaSQLKysely(String query, String message) {
        Connection yhteys = luoYhteys();
        Statement st;
        try {
            st = yhteys.createStatement();
            if ((st.executeUpdate(query)) == 1) {
                DefaultTableModel model = (DefaultTableModel) jtblTilausrivi.getModel();
                model.setRowCount(0);
                NaytaTilausRivi();

                JOptionPane.showMessageDialog(null, "Data " + message + " onnistuneesti");
            } else {
                JOptionPane.showMessageDialog(null, "Data ei " + message);
            }
            yhteys.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tilaustenhallinta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tilaustenhallinta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tilaustenhallinta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tilaustenhallinta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tilaustenhallinta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnLisääTuote;
    private javax.swing.JButton jbtnPoistaTuote;
    private javax.swing.JButton jbtnTestaaTilaus;
    private javax.swing.JButton jbtnTestaaTilausrivi;
    private javax.swing.JTable jtblTilaus;
    private javax.swing.JTable jtblTilausrivi;
    private javax.swing.JTextField jtxtAsiakasnumero;
    private javax.swing.JTextField jtxtEräpäivä;
    private javax.swing.JTextField jtxtLisätietoja;
    private javax.swing.JTextField jtxtMaksutapa;
    private javax.swing.JTextField jtxtTilausnumero;
    private javax.swing.JTextField jtxtTilauspäivä;
    private javax.swing.JTextField jtxtToimituspäivä;
    // End of variables declaration//GEN-END:variables
}
